<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SA1003CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1004CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1004Description" xml:space="preserve">
    <value>A line within a documentation header above a C# element does not begin with a single space.</value>
  </data>
  <data name="SA1004MessageFormat" xml:space="preserve">
    <value>Documentation line must begin with a space.</value>
  </data>
  <data name="SA1004Title" xml:space="preserve">
    <value>Documentation lines must begin with single space</value>
  </data>
  <data name="SA1005CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1005Description" xml:space="preserve">
    <value>A single-line comment within a C# code file does not begin with a single space.</value>
  </data>
  <data name="SA1005MessageFormat" xml:space="preserve">
    <value>Single line comment must begin with a space.</value>
  </data>
  <data name="SA1005Title" xml:space="preserve">
    <value>Single line comments must begin with single space</value>
  </data>
  <data name="SA1006Description" xml:space="preserve">
    <value>A C# preprocessor-type keyword is preceded by space.</value>
  </data>
  <data name="SA1006MessageFormat" xml:space="preserve">
    <value>Preprocessor keyword '{0}' must not be preceded by a space.</value>
  </data>
  <data name="SA1006Title" xml:space="preserve">
    <value>Preprocessor keywords must not be preceded by space</value>
  </data>
  <data name="SA1007Description" xml:space="preserve">
    <value>The operator keyword within a C# operator overload method is not followed by any whitespace.</value>
  </data>
  <data name="SA1007MessageFormat" xml:space="preserve">
    <value>Operator keyword must be followed by a space.</value>
  </data>
  <data name="SA1007Title" xml:space="preserve">
    <value>Operator keyword must be followed by space</value>
  </data>
  <data name="SA1008CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1016Description" xml:space="preserve">
    <value>An opening attribute bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1016MessageFormat" xml:space="preserve">
    <value>Opening attribute brackets must not be followed by a space.</value>
  </data>
  <data name="SA1016Title" xml:space="preserve">
    <value>Opening attribute brackets must be spaced correctly</value>
  </data>
  <data name="SA1017Description" xml:space="preserve">
    <value>A closing attribute bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1017MessageFormat" xml:space="preserve">
    <value>Closing attribute brackets must not be preceded by a space.</value>
  </data>
  <data name="SA1017Title" xml:space="preserve">
    <value>Closing attribute brackets must be spaced correctly</value>
  </data>
  <data name="SA1018CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1018Description" xml:space="preserve">
    <value>A nullable type symbol within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1018MessageFormat" xml:space="preserve">
    <value>Nullable type symbol must not be preceded by a space.</value>
  </data>
  <data name="SA1018Title" xml:space="preserve">
    <value>Nullable type symbols must be spaced correctly</value>
  </data>
  <data name="SA1025CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1025Description" xml:space="preserve">
    <value>The code contains multiple whitespace characters in a row.</value>
  </data>
  <data name="SA1025MessageFormat" xml:space="preserve">
    <value>Code must not contain multiple whitespace characters in a row.</value>
  </data>
  <data name="SA1025Title" xml:space="preserve">
    <value>Code must not contain multiple whitespace in a row</value>
  </data>
  <data name="SA1026Description" xml:space="preserve">
    <value>An implicitly typed new array allocation within a C# code file is not spaced correctly.</value>
  </data>
  <data name="SA1026MessageFormat" xml:space="preserve">
    <value>The keyword 'new' must not be followed by a space or a blank line.</value>
  </data>
  <data name="SA1026Title" xml:space="preserve">
    <value>Code must not contain space after new keyword in implicitly typed array allocation</value>
  </data>
  <data name="SA1027CodeFix" xml:space="preserve">
    <value>Replace tabs with spaces</value>
  </data>
  <data name="SA1027Description" xml:space="preserve">
    <value>The C# code contains a tab character</value>
  </data>
  <data name="SA1027MessageFormat" xml:space="preserve">
    <value>Tabs must not be used.</value>
  </data>
  <data name="SA1027Title" xml:space="preserve">
    <value>Tabs must not be used</value>
  </data>
  <data name="SA1028CodeFix" xml:space="preserve">
    <value>Remove trailing whitespace</value>
  </data>
  <data name="SA1028Description" xml:space="preserve">
    <value>There should not be any whitespace at the end of a line of code.</value>
  </data>
  <data name="SA1028MessageFormat" xml:space="preserve">
    <value>Code must not contain trailing whitespace</value>
  </data>
  <data name="SA1028Title" xml:space="preserve">
    <value>Code must not contain trailing whitespace</value>
  </data>
  <data name="TokenSpacingCodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
</root>