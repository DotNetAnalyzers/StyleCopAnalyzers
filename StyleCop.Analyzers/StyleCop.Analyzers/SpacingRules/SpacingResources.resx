<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SA1000Description" xml:space="preserve">
    <value>The spacing around a C# keyword is incorrect.</value>
  </data>
  <data name="SA1000MessageFormat" xml:space="preserve">
    <value>The keyword '{0}' should{1} be followed by a space</value>
  </data>
  <data name="SA1000Title" xml:space="preserve">
    <value>Keywords should be spaced correctly</value>
  </data>
  <data name="SA1001Description" xml:space="preserve">
    <value>The spacing around a comma is incorrect, within a C# code file.</value>
  </data>
  <data name="SA1001MessageFormat" xml:space="preserve">
    <value>Commas should{0} be {1} by whitespace</value>
  </data>
  <data name="SA1001Title" xml:space="preserve">
    <value>Commas should be spaced correctly</value>
  </data>
  <data name="SA1002Description" xml:space="preserve">
    <value>The spacing around a semicolon is incorrect, within a C# code file.</value>
  </data>
  <data name="SA1002MessageFormat" xml:space="preserve">
    <value>Semicolons should{0} be {1} by a space</value>
  </data>
  <data name="SA1002Title" xml:space="preserve">
    <value>Semicolons should be spaced correctly</value>
  </data>
  <data name="SA1003CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1003Description" xml:space="preserve">
    <value>The spacing around an operator symbol is incorrect, within a C# code file.</value>
  </data>
  <data name="SA1003MessageFormatFollowedByWhitespace" xml:space="preserve">
    <value>Operator '{0}' should be followed by whitespace.</value>
  </data>
  <data name="SA1003MessageFormatNotAtEndOfLine" xml:space="preserve">
    <value>Operator '{0}' should not appear at the end of a line.</value>
  </data>
  <data name="SA1003MessageFormatNotFollowedByComment" xml:space="preserve">
    <value>Operator '{0}' should not be followed by a comment.</value>
  </data>
  <data name="SA1003MessageFormatNotFollowedByWhitespace" xml:space="preserve">
    <value>Operator '{0}' should not be followed by whitespace.</value>
  </data>
  <data name="SA1003MessageFormatNotPrecededByWhitespace" xml:space="preserve">
    <value>Operator '{0}' should not be preceded by whitespace.</value>
  </data>
  <data name="SA1003MessageFormatPrecededByWhitespace" xml:space="preserve">
    <value>Operator '{0}' should be preceded by whitespace.</value>
  </data>
  <data name="SA1003Title" xml:space="preserve">
    <value>Symbols should be spaced correctly</value>
  </data>
  <data name="SA1004CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1004Description" xml:space="preserve">
    <value>A line within a documentation header above a C# element does not begin with a single space.</value>
  </data>
  <data name="SA1004MessageFormat" xml:space="preserve">
    <value>Documentation line should begin with a space</value>
  </data>
  <data name="SA1004Title" xml:space="preserve">
    <value>Documentation lines should begin with single space</value>
  </data>
  <data name="SA1005CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1005Description" xml:space="preserve">
    <value>A single-line comment within a C# code file does not begin with a single space.</value>
  </data>
  <data name="SA1005MessageFormat" xml:space="preserve">
    <value>Single line comment should begin with a space</value>
  </data>
  <data name="SA1005Title" xml:space="preserve">
    <value>Single line comments should begin with single space</value>
  </data>
  <data name="SA1006Description" xml:space="preserve">
    <value>A C# preprocessor-type keyword is preceded by space.</value>
  </data>
  <data name="SA1006MessageFormat" xml:space="preserve">
    <value>Preprocessor keyword '{0}' should not be preceded by a space</value>
  </data>
  <data name="SA1006Title" xml:space="preserve">
    <value>Preprocessor keywords should not be preceded by space</value>
  </data>
  <data name="SA1007Description" xml:space="preserve">
    <value>The operator keyword within a C# operator overload method is not followed by any whitespace.</value>
  </data>
  <data name="SA1007MessageFormat" xml:space="preserve">
    <value>Operator keyword should be followed by a space</value>
  </data>
  <data name="SA1007Title" xml:space="preserve">
    <value>Operator keyword should be followed by space</value>
  </data>
  <data name="SA1008CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1008Description" xml:space="preserve">
    <value>An opening parenthesis within a C# statement is not spaced correctly.</value>
  </data>
  <data name="SA1008MessageNotFollowed" xml:space="preserve">
    <value>Opening parenthesis should not be followed by a space.</value>
  </data>
  <data name="SA1008MessageNotPreceded" xml:space="preserve">
    <value>Opening parenthesis should not be preceded by a space.</value>
  </data>
  <data name="SA1008MessagePreceded" xml:space="preserve">
    <value>Opening parenthesis should be preceded by a space.</value>
  </data>
  <data name="SA1008Title" xml:space="preserve">
    <value>Opening parenthesis should be spaced correctly</value>
  </data>
  <data name="SA1009Description" xml:space="preserve">
    <value>A closing parenthesis within a C# statement is not spaced correctly.</value>
  </data>
  <data name="SA1009MessageFollowed" xml:space="preserve">
    <value>Closing parenthesis should be followed by a space</value>
  </data>
  <data name="SA1009MessageNotFollowed" xml:space="preserve">
    <value>Closing parenthesis should not be followed by a space</value>
  </data>
  <data name="SA1009MessageNotPreceded" xml:space="preserve">
    <value>Closing parenthesis should not be preceded by a space</value>
  </data>
  <data name="SA1009Title" xml:space="preserve">
    <value>Closing parenthesis should be spaced correctly</value>
  </data>
  <data name="SA1010Description" xml:space="preserve">
    <value>An opening square bracket within a C# statement is not spaced correctly.</value>
  </data>
  <data name="SA1010MessageNotFollowed" xml:space="preserve">
    <value>Opening square brackets should not be followed by a space</value>
  </data>
  <data name="SA1010MessageNotPreceded" xml:space="preserve">
    <value>Opening square brackets should not be preceded by a space</value>
  </data>
  <data name="SA1010Title" xml:space="preserve">
    <value>Opening square brackets should be spaced correctly</value>
  </data>
  <data name="SA1011Description" xml:space="preserve">
    <value>A closing square bracket within a C# statement is not spaced correctly.</value>
  </data>
  <data name="SA1011MessageFormat" xml:space="preserve">
    <value>Closing square bracket should{0} be {1} by a space</value>
  </data>
  <data name="SA1011Title" xml:space="preserve">
    <value>Closing square brackets should be spaced correctly</value>
  </data>
  <data name="SA1012Description" xml:space="preserve">
    <value>An opening brace within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1012MessageFormat" xml:space="preserve">
    <value>Opening brace should{0} be {1} by a space</value>
  </data>
  <data name="SA1012Title" xml:space="preserve">
    <value>Opening braces should be spaced correctly</value>
  </data>
  <data name="SA1013Description" xml:space="preserve">
    <value>A closing brace within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1013MessageFormat" xml:space="preserve">
    <value>Closing brace should{0} be {1} by a space</value>
  </data>
  <data name="SA1013Title" xml:space="preserve">
    <value>Closing braces should be spaced correctly</value>
  </data>
  <data name="SA1014Description" xml:space="preserve">
    <value>An opening generic bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1014MessageFormat" xml:space="preserve">
    <value>Opening generic brackets should not be {0} by a space</value>
  </data>
  <data name="SA1014Title" xml:space="preserve">
    <value>Opening generic brackets should be spaced correctly</value>
  </data>
  <data name="SA1015Description" xml:space="preserve">
    <value>A closing generic bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1015MessageFollowed" xml:space="preserve">
    <value>Closing generic bracket should be followed by a space</value>
  </data>
  <data name="SA1015MessageNotFollowed" xml:space="preserve">
    <value>Closing generic bracket should not be followed by a space</value>
  </data>
  <data name="SA1015MessageNotPreceded" xml:space="preserve">
    <value>Closing generic bracket should not be preceded by a space</value>
  </data>
  <data name="SA1015Title" xml:space="preserve">
    <value>Closing generic brackets should be spaced correctly</value>
  </data>
  <data name="SA1016Description" xml:space="preserve">
    <value>An opening attribute bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1016MessageFormat" xml:space="preserve">
    <value>Opening attribute brackets should not be followed by a space</value>
  </data>
  <data name="SA1016Title" xml:space="preserve">
    <value>Opening attribute brackets should be spaced correctly</value>
  </data>
  <data name="SA1017Description" xml:space="preserve">
    <value>A closing attribute bracket within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1017MessageFormat" xml:space="preserve">
    <value>Closing attribute brackets should not be preceded by a space</value>
  </data>
  <data name="SA1017Title" xml:space="preserve">
    <value>Closing attribute brackets should be spaced correctly</value>
  </data>
  <data name="SA1018CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1018Description" xml:space="preserve">
    <value>A nullable type symbol within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1018MessageFormat" xml:space="preserve">
    <value>Nullable type symbol should not be preceded by a space</value>
  </data>
  <data name="SA1018Title" xml:space="preserve">
    <value>Nullable type symbols should be spaced correctly</value>
  </data>
  <data name="SA1019Description" xml:space="preserve">
    <value>The spacing around a member access symbol is incorrect, within a C# code file.</value>
  </data>
  <data name="SA1019MessageNotFollowed" xml:space="preserve">
    <value>Member access symbol '{0}' should not be followed by a space</value>
  </data>
  <data name="SA1019MessageNotPreceded" xml:space="preserve">
    <value>Member access symbol '{0}' should not be preceded by a space</value>
  </data>
  <data name="SA1019Title" xml:space="preserve">
    <value>Member access symbols should be spaced correctly</value>
  </data>
  <data name="SA1020Description" xml:space="preserve">
    <value>An increment or decrement symbol within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1020MessageFormat" xml:space="preserve">
    <value>{0} symbol '{1}' should not be {2} by a space</value>
  </data>
  <data name="SA1020Title" xml:space="preserve">
    <value>Increment decrement symbols should be spaced correctly</value>
  </data>
  <data name="SA1021Description" xml:space="preserve">
    <value>A negative sign within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1021MessageFormat" xml:space="preserve">
    <value>Negative sign should{0} be {1} by a space</value>
  </data>
  <data name="SA1021Title" xml:space="preserve">
    <value>Negative signs should be spaced correctly</value>
  </data>
  <data name="SA1022Description" xml:space="preserve">
    <value>A positive sign within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1022MessageFormat" xml:space="preserve">
    <value>Positive sign should{0} be {1} by a space</value>
  </data>
  <data name="SA1022Title" xml:space="preserve">
    <value>Positive signs should be spaced correctly</value>
  </data>
  <data name="SA1023Description" xml:space="preserve">
    <value>A dereference symbol or an access-of symbol within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1023MessageFollowed" xml:space="preserve">
    <value>Dereference symbol '*' should be followed by a space</value>
  </data>
  <data name="SA1023MessageNotAtBeginningOfLine" xml:space="preserve">
    <value>Dereference symbol '*' should not appear at the beginning of a line</value>
  </data>
  <data name="SA1023MessageNotAtEndOfLine" xml:space="preserve">
    <value>Dereference symbol '*' should not appear at the end of a line</value>
  </data>
  <data name="SA1023MessageNotFollowed" xml:space="preserve">
    <value>Dereference symbol '*' should not be followed by a space</value>
  </data>
  <data name="SA1023MessageNotPreceded" xml:space="preserve">
    <value>Dereference symbol '*' should not be preceded by a space</value>
  </data>
  <data name="SA1023Title" xml:space="preserve">
    <value>Dereference and access of symbols should be spaced correctly</value>
  </data>
  <data name="SA1024Description" xml:space="preserve">
    <value>A colon within a C# element is not spaced correctly.</value>
  </data>
  <data name="SA1024MessageFollowed" xml:space="preserve">
    <value>Colon should be followed by a space</value>
  </data>
  <data name="SA1024MessageNotPreceded" xml:space="preserve">
    <value>Colon should not be preceded by a space</value>
  </data>
  <data name="SA1024MessagePreceded" xml:space="preserve">
    <value>Colon should be preceded by a space</value>
  </data>
  <data name="SA1024Title" xml:space="preserve">
    <value>Colons Should Be Spaced Correctly</value>
  </data>
  <data name="SA1025CodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
  <data name="SA1025Description" xml:space="preserve">
    <value>The code contains multiple whitespace characters in a row.</value>
  </data>
  <data name="SA1025MessageFormat" xml:space="preserve">
    <value>Code should not contain multiple whitespace characters in a row</value>
  </data>
  <data name="SA1025Title" xml:space="preserve">
    <value>Code should not contain multiple whitespace in a row</value>
  </data>
  <data name="SA1026Description" xml:space="preserve">
    <value>An implicitly typed array allocation within a C# code file is not spaced correctly.</value>
  </data>
  <data name="SA1026MessageFormat" xml:space="preserve">
    <value>The keyword '{0}' should not be followed by a space or a blank line</value>
  </data>
  <data name="SA1026Title" xml:space="preserve">
    <value>Code should not contain space after new or stackalloc keyword in implicitly typed array allocation</value>
  </data>
  <data name="SA1027CodeFix" xml:space="preserve">
    <value>Fix tabs</value>
  </data>
  <data name="SA1027Description" xml:space="preserve">
    <value>The code contains a tab or space character which is not consistent with the current project settings.</value>
  </data>
  <data name="SA1027MessageFormat" xml:space="preserve">
    <value>Tabs and spaces should be used correctly</value>
  </data>
  <data name="SA1027Title" xml:space="preserve">
    <value>Use tabs correctly</value>
  </data>
  <data name="SA1028CodeFix" xml:space="preserve">
    <value>Remove trailing whitespace</value>
  </data>
  <data name="SA1028Description" xml:space="preserve">
    <value>There should not be any whitespace at the end of a line of code.</value>
  </data>
  <data name="SA1028MessageFormat" xml:space="preserve">
    <value>Code should not contain trailing whitespace</value>
  </data>
  <data name="SA1028Title" xml:space="preserve">
    <value>Code should not contain trailing whitespace</value>
  </data>
  <data name="TokenSpacingCodeFix" xml:space="preserve">
    <value>Fix spacing</value>
  </data>
</root>