<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SA1609SA1610CodeFix" xml:space="preserve">
    <value>Document value from summary</value>
  </data>
  <data name="SA1617CodeFix" xml:space="preserve">
    <value>Remove &lt;returns&gt; XML comment</value>
  </data>
  <data name="SA1633Description" xml:space="preserve">
    <value>A C# code file is missing a standard file header.</value>
  </data>
  <data name="SA1633MessageFormatMalformed" xml:space="preserve">
    <value>The file header XML is invalid.</value>
  </data>
  <data name="SA1633MessageFormatMissing" xml:space="preserve">
    <value>The file header is missing or not located at the top of the file.</value>
  </data>
  <data name="SA1633Title" xml:space="preserve">
    <value>File must have header</value>
  </data>
  <data name="SA1634Description" xml:space="preserve">
    <value>The file header at the top of a C# code file is missing a copyright tag.</value>
  </data>
  <data name="SA1634MessageFormat" xml:space="preserve">
    <value>The file header must contain a copyright tag.</value>
  </data>
  <data name="SA1634Title" xml:space="preserve">
    <value>File header must show copyright</value>
  </data>
  <data name="SA1635Description" xml:space="preserve">
    <value>The file header at the top of a C# code file is missing copyright text.</value>
  </data>
  <data name="SA1635MessageFormat" xml:space="preserve">
    <value>File header must have copyright text</value>
  </data>
  <data name="SA1635Title" xml:space="preserve">
    <value>File header must have copyright text</value>
  </data>
  <data name="SA1636Description" xml:space="preserve">
    <value>The file header at the top of a C# code file does not contain the appropriate copyright text.</value>
  </data>
  <data name="SA1636MessageFormat" xml:space="preserve">
    <value>The file header copyright text must match the copyright text from the settings.</value>
  </data>
  <data name="SA1636Title" xml:space="preserve">
    <value>File header copyright text must match</value>
  </data>
  <data name="SA1637Description" xml:space="preserve">
    <value>The file header at the top of a C# code file is missing the file name.</value>
  </data>
  <data name="SA1637MessageFormat" xml:space="preserve">
    <value>File header must contain file name.</value>
  </data>
  <data name="SA1637Title" xml:space="preserve">
    <value>File header must contain file name</value>
  </data>
  <data name="SA1638Description" xml:space="preserve">
    <value>The file attribute within copyright tag of the file header at the top of a C# code file does not contain the name of the file.</value>
  </data>
  <data name="SA1638MessageFormat" xml:space="preserve">
    <value>File header file name documentation must match file name.</value>
  </data>
  <data name="SA1638Title" xml:space="preserve">
    <value>File header file name documentation must match file name</value>
  </data>
  <data name="SA1639Description" xml:space="preserve">
    <value>The file header at the top of a C# code file does not contain a filled-in summary tag.</value>
  </data>
  <data name="SA1639MessageFormat" xml:space="preserve">
    <value>File header must have summary</value>
  </data>
  <data name="SA1639Title" xml:space="preserve">
    <value>File header must have summary</value>
  </data>
  <data name="SA1640Description" xml:space="preserve">
    <value>The file header at the top of a C# code file does not contain company name text.</value>
  </data>
  <data name="SA1640MessageFormat" xml:space="preserve">
    <value>The copyright tag must contain a non-empty company attribute.</value>
  </data>
  <data name="SA1640Title" xml:space="preserve">
    <value>File header must have valid company text</value>
  </data>
  <data name="SA1641Description" xml:space="preserve">
    <value>The file header at the top of a C# code file does not contain the appropriate company name text.</value>
  </data>
  <data name="SA1641MessageFormat" xml:space="preserve">
    <value>The file header company name must match the company name from the settings.</value>
  </data>
  <data name="SA1641Title" xml:space="preserve">
    <value>File header company name text must match</value>
  </data>
  <data name="SA1642SA1643CodeFix" xml:space="preserve">
    <value>Add standard text</value>
  </data>
  <data name="SA1651CodeFix" xml:space="preserve">
    <value>Finalize placeholder text</value>
  </data>
  <data name="SA1652Description" xml:space="preserve">
    <value>The project is currently configured to not parse XML documentation comments; all diagnostics for documentation comments are disabled. Enable XML documentation output to enable these diagnostics.</value>
  </data>
  <data name="SA1652MessageFormat" xml:space="preserve">
    <value>Enable XML documentation output</value>
  </data>
  <data name="SA1652Title" xml:space="preserve">
    <value>Enable XML documentation output</value>
  </data>
</root>