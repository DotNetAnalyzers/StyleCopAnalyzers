// <auto-generated/>

#nullable enable
using System.Reflection;


namespace StyleCop.Analyzers.LayoutRules
{
    internal static partial class LayoutResources
    {
        private static global::System.Resources.ResourceManager? s_resourceManager;
        public static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(LayoutResources)));
        public static global::System.Globalization.CultureInfo? Culture { get; set; }
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [return: global::System.Diagnostics.CodeAnalysis.NotNullIfNotNull("defaultValue")]
        internal static string? GetResourceString(string resourceKey, string? defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture) ?? defaultValue;
        /// <summary>Align braces</summary>
        public static string @SA1500CodeFix => GetResourceString("SA1500CodeFix")!;
        /// <summary>The opening or closing brace within a C# statement, element, or expression is not placed on its own line.</summary>
        public static string @SA1500Description => GetResourceString("SA1500Description")!;
        /// <summary>Braces for multi-line statements should not share line</summary>
        public static string @SA1500MessageFormat => GetResourceString("SA1500MessageFormat")!;
        /// <summary>Braces for multi-line statements should not share line</summary>
        public static string @SA1500Title => GetResourceString("SA1500Title")!;
        /// <summary>Expand single line block</summary>
        public static string @SA1501CodeFix => GetResourceString("SA1501CodeFix")!;
        /// <summary>Expand all single line blocks</summary>
        public static string @SA1501CodeFixAll => GetResourceString("SA1501CodeFixAll")!;
        /// <summary>A C# statement containing opening and closing braces is written completely on a single line.</summary>
        public static string @SA1501Description => GetResourceString("SA1501Description")!;
        /// <summary>Statement should not be on a single line</summary>
        public static string @SA1501MessageFormat => GetResourceString("SA1501MessageFormat")!;
        /// <summary>Statement should not be on a single line</summary>
        public static string @SA1501Title => GetResourceString("SA1501Title")!;
        /// <summary>Expand element</summary>
        public static string @SA1502CodeFix => GetResourceString("SA1502CodeFix")!;
        /// <summary>A C# element containing opening and closing braces is written completely on a single line.</summary>
        public static string @SA1502Description => GetResourceString("SA1502Description")!;
        /// <summary>Element should not be on a single line</summary>
        public static string @SA1502MessageFormat => GetResourceString("SA1502MessageFormat")!;
        /// <summary>Element should not be on a single line</summary>
        public static string @SA1502Title => GetResourceString("SA1502Title")!;
        /// <summary>Wrap with braces</summary>
        public static string @SA1503CodeFix => GetResourceString("SA1503CodeFix")!;
        /// <summary>The opening and closing braces for a C# statement have been omitted.</summary>
        public static string @SA1503Description => GetResourceString("SA1503Description")!;
        /// <summary>Braces should not be omitted</summary>
        public static string @SA1503MessageFormat => GetResourceString("SA1503MessageFormat")!;
        /// <summary>Braces should not be omitted</summary>
        public static string @SA1503Title => GetResourceString("SA1503Title")!;
        /// <summary>Reformat accessors to multiple lines style</summary>
        public static string @SA1504CodeFixMultipleLines => GetResourceString("SA1504CodeFixMultipleLines")!;
        /// <summary>Reformat accessors to single line style</summary>
        public static string @SA1504CodeFixSingleLine => GetResourceString("SA1504CodeFixSingleLine")!;
        /// <summary>Within a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines.</summary>
        public static string @SA1504Description => GetResourceString("SA1504Description")!;
        /// <summary>All accessors should be single-line or multi-line</summary>
        public static string @SA1504MessageFormat => GetResourceString("SA1504MessageFormat")!;
        /// <summary>All accessors should be single-line or multi-line</summary>
        public static string @SA1504Title => GetResourceString("SA1504Title")!;
        /// <summary>Remove blank lines following this brace</summary>
        public static string @SA1505CodeFix => GetResourceString("SA1505CodeFix")!;
        /// <summary>An opening brace within a C# element, statement, or expression is followed by a blank line.</summary>
        public static string @SA1505Description => GetResourceString("SA1505Description")!;
        /// <summary>An opening brace should not be followed by a blank line</summary>
        public static string @SA1505MessageFormat => GetResourceString("SA1505MessageFormat")!;
        /// <summary>Opening braces should not be followed by blank line</summary>
        public static string @SA1505Title => GetResourceString("SA1505Title")!;
        /// <summary>Remove blank line(s) after documentation header</summary>
        public static string @SA1506CodeFix => GetResourceString("SA1506CodeFix")!;
        /// <summary>An element documentation header above a C# element is followed by a blank line.</summary>
        public static string @SA1506Description => GetResourceString("SA1506Description")!;
        /// <summary>Element documentation headers should not be followed by blank line</summary>
        public static string @SA1506MessageFormat => GetResourceString("SA1506MessageFormat")!;
        /// <summary>Element documentation headers should not be followed by blank line</summary>
        public static string @SA1506Title => GetResourceString("SA1506Title")!;
        /// <summary>Remove multiple blank lines</summary>
        public static string @SA1507CodeFix => GetResourceString("SA1507CodeFix")!;
        /// <summary>The C# code contains multiple blank lines in a row.</summary>
        public static string @SA1507Description => GetResourceString("SA1507Description")!;
        /// <summary>Code should not contain multiple blank lines in a row</summary>
        public static string @SA1507MessageFormat => GetResourceString("SA1507MessageFormat")!;
        /// <summary>Code should not contain multiple blank lines in a row</summary>
        public static string @SA1507Title => GetResourceString("SA1507Title")!;
        /// <summary>Remove blank lines preceding this brace</summary>
        public static string @SA1508CodeFix => GetResourceString("SA1508CodeFix")!;
        /// <summary>A closing brace within a C# element, statement, or expression is preceded by a blank line.</summary>
        public static string @SA1508Description => GetResourceString("SA1508Description")!;
        /// <summary>A closing brace should not be preceded by a blank line</summary>
        public static string @SA1508MessageFormat => GetResourceString("SA1508MessageFormat")!;
        /// <summary>Closing braces should not be preceded by blank line</summary>
        public static string @SA1508Title => GetResourceString("SA1508Title")!;
        /// <summary>Remove blank lines preceding this brace</summary>
        public static string @SA1509CodeFix => GetResourceString("SA1509CodeFix")!;
        /// <summary>An opening brace within a C# element, statement, or expression is preceded by a blank line.</summary>
        public static string @SA1509Description => GetResourceString("SA1509Description")!;
        /// <summary>Opening braces should not be preceded by blank line</summary>
        public static string @SA1509MessageFormat => GetResourceString("SA1509MessageFormat")!;
        /// <summary>Opening braces should not be preceded by blank line</summary>
        public static string @SA1509Title => GetResourceString("SA1509Title")!;
        /// <summary>Remove blank line before chained statement</summary>
        public static string @SA1510CodeFix => GetResourceString("SA1510CodeFix")!;
        /// <summary>Chained C# statements are separated by a blank line.</summary>
        public static string @SA1510Description => GetResourceString("SA1510Description")!;
        /// <summary>'{0}' statement should not be preceded by a blank line</summary>
        public static string @SA1510MessageFormat => GetResourceString("SA1510MessageFormat")!;
        /// <summary>Chained statement blocks should not be preceded by blank line</summary>
        public static string @SA1510Title => GetResourceString("SA1510Title")!;
        /// <summary>Remove blank line before while</summary>
        public static string @SA1511CodeFix => GetResourceString("SA1511CodeFix")!;
        /// <summary>The while footer at the bottom of a do-while statement is separated from the statement by a blank line.</summary>
        public static string @SA1511Description => GetResourceString("SA1511Description")!;
        /// <summary>While-do footer should not be preceded by blank line</summary>
        public static string @SA1511MessageFormat => GetResourceString("SA1511MessageFormat")!;
        /// <summary>While-do footer should not be preceded by blank line</summary>
        public static string @SA1511Title => GetResourceString("SA1511Title")!;
        /// <summary>Remove blank line after comment</summary>
        public static string @SA1512CodeFix => GetResourceString("SA1512CodeFix")!;
        /// <summary>A single-line comment within C# code is followed by a blank line.</summary>
        public static string @SA1512Description => GetResourceString("SA1512Description")!;
        /// <summary>Single-line comments should not be followed by blank line</summary>
        public static string @SA1512MessageFormat => GetResourceString("SA1512MessageFormat")!;
        /// <summary>Single-line comments should not be followed by blank line</summary>
        public static string @SA1512Title => GetResourceString("SA1512Title")!;
        /// <summary>Insert blank line after brace</summary>
        public static string @SA1513CodeFix => GetResourceString("SA1513CodeFix")!;
        /// <summary>A closing brace within a C# element, statement, or expression is not followed by a blank line.</summary>
        public static string @SA1513Description => GetResourceString("SA1513Description")!;
        /// <summary>Closing brace should be followed by blank line</summary>
        public static string @SA1513MessageFormat => GetResourceString("SA1513MessageFormat")!;
        /// <summary>Closing brace should be followed by blank line</summary>
        public static string @SA1513Title => GetResourceString("SA1513Title")!;
        /// <summary>Insert blank line before documentation header</summary>
        public static string @SA1514CodeFix => GetResourceString("SA1514CodeFix")!;
        /// <summary>An element documentation header above a C# element is not preceded by a blank line.</summary>
        public static string @SA1514Description => GetResourceString("SA1514Description")!;
        /// <summary>Element documentation header should be preceded by blank line</summary>
        public static string @SA1514MessageFormat => GetResourceString("SA1514MessageFormat")!;
        /// <summary>Element documentation header should be preceded by blank line</summary>
        public static string @SA1514Title => GetResourceString("SA1514Title")!;
        /// <summary>Insert blank line before comment</summary>
        public static string @SA1515CodeFix => GetResourceString("SA1515CodeFix")!;
        /// <summary>A single-line comment within C# code is not preceded by a blank line.</summary>
        public static string @SA1515Description => GetResourceString("SA1515Description")!;
        /// <summary>Single-line comment should be preceded by blank line</summary>
        public static string @SA1515MessageFormat => GetResourceString("SA1515MessageFormat")!;
        /// <summary>Single-line comment should be preceded by blank line</summary>
        public static string @SA1515Title => GetResourceString("SA1515Title")!;
        /// <summary>Fix blank lines</summary>
        public static string @SA1516CodeFixAll => GetResourceString("SA1516CodeFixAll")!;
        /// <summary>Insert new line</summary>
        public static string @SA1516CodeFixInsert => GetResourceString("SA1516CodeFixInsert")!;
        /// <summary>Remove blank line</summary>
        public static string @SA1516CodeFixRemove => GetResourceString("SA1516CodeFixRemove")!;
        /// <summary>Adjacent C# elements are not separated by a blank line.</summary>
        public static string @SA1516Description => GetResourceString("SA1516Description")!;
        /// <summary>Adjacent using directives should not be separated by a blank line.</summary>
        public static string @SA1516DescriptionOmit => GetResourceString("SA1516DescriptionOmit")!;
        /// <summary>Adjacent using directives should be separated by a blank line.</summary>
        public static string @SA1516DescriptionRequire => GetResourceString("SA1516DescriptionRequire")!;
        /// <summary>Elements should be separated by blank line</summary>
        public static string @SA1516MessageFormat => GetResourceString("SA1516MessageFormat")!;
        /// <summary>Using directives should not be separated by blank line</summary>
        public static string @SA1516MessageFormatOmit => GetResourceString("SA1516MessageFormatOmit")!;
        /// <summary>Using directives should be separated by blank line</summary>
        public static string @SA1516MessageFormatRequire => GetResourceString("SA1516MessageFormatRequire")!;
        /// <summary>Elements should be separated by blank line</summary>
        public static string @SA1516Title => GetResourceString("SA1516Title")!;
        /// <summary>Remove blank lines at the start of the file</summary>
        public static string @SA1517CodeFix => GetResourceString("SA1517CodeFix")!;
        /// <summary>The code file has blank lines at the start.</summary>
        public static string @SA1517Description => GetResourceString("SA1517Description")!;
        /// <summary>Code should not contain blank lines at start of file</summary>
        public static string @SA1517MessageFormat => GetResourceString("SA1517MessageFormat")!;
        /// <summary>Code should not contain blank lines at start of file</summary>
        public static string @SA1517Title => GetResourceString("SA1517Title")!;
        /// <summary>Fix whitespace at the end of the file</summary>
        public static string @SA1518CodeFix => GetResourceString("SA1518CodeFix")!;
        /// <summary>Code should not contain blank lines at the end of the file.</summary>
        public static string @SA1518DescriptionAllow => GetResourceString("SA1518DescriptionAllow")!;
        /// <summary>File may not end with a newline character.</summary>
        public static string @SA1518DescriptionOmit => GetResourceString("SA1518DescriptionOmit")!;
        /// <summary>File is required to end with a single newline character.</summary>
        public static string @SA1518DescriptionRequire => GetResourceString("SA1518DescriptionRequire")!;
        /// <summary>Code should not contain blank lines at the end of the file</summary>
        public static string @SA1518MessageFormatAllow => GetResourceString("SA1518MessageFormatAllow")!;
        /// <summary>File may not end with a newline character</summary>
        public static string @SA1518MessageFormatOmit => GetResourceString("SA1518MessageFormatOmit")!;
        /// <summary>File is required to end with a single newline character</summary>
        public static string @SA1518MessageFormatRequire => GetResourceString("SA1518MessageFormatRequire")!;
        /// <summary>Use line endings correctly at end of file</summary>
        public static string @SA1518Title => GetResourceString("SA1518Title")!;
        /// <summary>The opening and closing braces for a multi-line C# statement have been omitted.</summary>
        public static string @SA1519Description => GetResourceString("SA1519Description")!;
        /// <summary>Braces should not be omitted from multi-line child statement</summary>
        public static string @SA1519MessageFormat => GetResourceString("SA1519MessageFormat")!;
        /// <summary>Braces should not be omitted from multi-line child statement</summary>
        public static string @SA1519Title => GetResourceString("SA1519Title")!;
        /// <summary>The opening and closing braces of a chained if/else if/else construct were included for some clauses, but omitted for others.</summary>
        public static string @SA1520Description => GetResourceString("SA1520Description")!;
        /// <summary>Use braces consistently</summary>
        public static string @SA1520MessageFormat => GetResourceString("SA1520MessageFormat")!;
        /// <summary>Use braces consistently</summary>
        public static string @SA1520Title => GetResourceString("SA1520Title")!;

    }
}
