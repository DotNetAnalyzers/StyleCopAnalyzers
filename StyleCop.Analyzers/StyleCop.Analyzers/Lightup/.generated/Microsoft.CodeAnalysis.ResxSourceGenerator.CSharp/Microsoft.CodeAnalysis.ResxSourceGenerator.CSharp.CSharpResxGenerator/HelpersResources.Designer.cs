// <auto-generated/>

#nullable enable
using System.Reflection;


namespace StyleCop.Analyzers.Helpers
{
    internal static partial class HelpersResources
    {
        private static global::System.Resources.ResourceManager? s_resourceManager;
        public static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(HelpersResources)));
        public static global::System.Globalization.CultureInfo? Culture { get; set; }
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [return: global::System.Diagnostics.CodeAnalysis.NotNullIfNotNull("defaultValue")]
        internal static string? GetResourceString(string resourceKey, string? defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture) ?? defaultValue;
        /// <summary>Fix all '{0}'</summary>
        public static string @FixAllOccurrencesOfDiagnostic => GetResourceString("FixAllOccurrencesOfDiagnostic")!;
        /// <summary>Fix all '{0}' in '{1}'</summary>
        public static string @FixAllOccurrencesOfDiagnosticInScope => GetResourceString("FixAllOccurrencesOfDiagnosticInScope")!;
        /// <summary>Fix all '{0}' in Solution</summary>
        public static string @FixAllOccurrencesOfDiagnosticInSolution => GetResourceString("FixAllOccurrencesOfDiagnosticInSolution")!;

    }
}
